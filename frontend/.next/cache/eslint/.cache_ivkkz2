[{"/Users/flohop/WebstormProjects/check24-holiday-challenge/frontend/app/components/Counter/Counter.tsx":"1","/Users/flohop/WebstormProjects/check24-holiday-challenge/frontend/app/components/Flight/Flight.tsx":"2","/Users/flohop/WebstormProjects/check24-holiday-challenge/frontend/app/components/Hotel/Hotel.tsx":"3","/Users/flohop/WebstormProjects/check24-holiday-challenge/frontend/app/components/Hotel/HotelItem.tsx":"4","/Users/flohop/WebstormProjects/check24-holiday-challenge/frontend/app/components/Hotel/StarRating.tsx":"5","/Users/flohop/WebstormProjects/check24-holiday-challenge/frontend/app/components/HotelOffer/HotelOffer.tsx":"6","/Users/flohop/WebstormProjects/check24-holiday-challenge/frontend/app/components/Nav/Nav.tsx":"7","/Users/flohop/WebstormProjects/check24-holiday-challenge/frontend/app/components/SearchForm/SearchForm.tsx":"8","/Users/flohop/WebstormProjects/check24-holiday-challenge/frontend/app/hotel_offers/[id]/page.tsx":"9","/Users/flohop/WebstormProjects/check24-holiday-challenge/frontend/app/hotels/[id]/page.tsx":"10","/Users/flohop/WebstormProjects/check24-holiday-challenge/frontend/app/hotels/page.tsx":"11","/Users/flohop/WebstormProjects/check24-holiday-challenge/frontend/app/layout.tsx":"12","/Users/flohop/WebstormProjects/check24-holiday-challenge/frontend/app/offers/page.tsx":"13","/Users/flohop/WebstormProjects/check24-holiday-challenge/frontend/app/page.tsx":"14","/Users/flohop/WebstormProjects/check24-holiday-challenge/frontend/app/saved_offers/page.tsx":"15","/Users/flohop/WebstormProjects/check24-holiday-challenge/frontend/app/types/converter.ts":"16","/Users/flohop/WebstormProjects/check24-holiday-challenge/frontend/app/types/openapi.d.ts":"17","/Users/flohop/WebstormProjects/check24-holiday-challenge/frontend/app/utils/gqlClient.ts":"18","/Users/flohop/WebstormProjects/check24-holiday-challenge/frontend/app/utils/utils.ts":"19","/Users/flohop/WebstormProjects/check24-holiday-challenge/frontend/app/utils/mutations.ts":"20"},{"size":867,"mtime":1683556644000,"results":"21","hashOfConfig":"22"},{"size":2893,"mtime":1684485531827,"results":"23","hashOfConfig":"22"},{"size":1857,"mtime":1684673086898,"results":"24","hashOfConfig":"22"},{"size":1264,"mtime":1684673086867,"results":"25","hashOfConfig":"22"},{"size":371,"mtime":1684410270569,"results":"26","hashOfConfig":"22"},{"size":5948,"mtime":1684673086901,"results":"27","hashOfConfig":"22"},{"size":706,"mtime":1683556644000,"results":"28","hashOfConfig":"22"},{"size":16793,"mtime":1684673455767,"results":"29","hashOfConfig":"22"},{"size":7644,"mtime":1684673304363,"results":"30","hashOfConfig":"22"},{"size":8217,"mtime":1684673304370,"results":"31","hashOfConfig":"22"},{"size":2051,"mtime":1684673086893,"results":"32","hashOfConfig":"22"},{"size":2993,"mtime":1684673086889,"results":"33","hashOfConfig":"22"},{"size":2020,"mtime":1684673304373,"results":"34","hashOfConfig":"22"},{"size":6863,"mtime":1684673086879,"results":"35","hashOfConfig":"22"},{"size":3124,"mtime":1684673206892,"results":"36","hashOfConfig":"22"},{"size":2033,"mtime":1684660519994,"results":"37","hashOfConfig":"22"},{"size":5497,"mtime":1684673086897,"results":"38","hashOfConfig":"22"},{"size":537,"mtime":1683637210801,"results":"39","hashOfConfig":"22"},{"size":808,"mtime":1684660434162,"results":"40","hashOfConfig":"22"},{"size":182,"mtime":1684660319567,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"12neny9",{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/flohop/WebstormProjects/check24-holiday-challenge/frontend/app/components/Counter/Counter.tsx",[],[],"/Users/flohop/WebstormProjects/check24-holiday-challenge/frontend/app/components/Flight/Flight.tsx",[],[],"/Users/flohop/WebstormProjects/check24-holiday-challenge/frontend/app/components/Hotel/Hotel.tsx",[],[],"/Users/flohop/WebstormProjects/check24-holiday-challenge/frontend/app/components/Hotel/HotelItem.tsx",[],[],"/Users/flohop/WebstormProjects/check24-holiday-challenge/frontend/app/components/Hotel/StarRating.tsx",[],[],"/Users/flohop/WebstormProjects/check24-holiday-challenge/frontend/app/components/HotelOffer/HotelOffer.tsx",["104"],[],"import {Button, Card, CardContent, CardHeader, Divider, Grid, Typography} from \"@mui/material\";\nimport {useRouter} from \"next/navigation\"\nimport {Stack} from \"@mui/system\";\nimport Flight from \"@/app/components/Flight/Flight\";\nimport {Components} from \"@/app/types/openapi\"\nimport {Bed, BookmarkBorderOutlined, BookmarkOutlined, RestaurantMenu, Water} from \"@mui/icons-material\";\nimport {useEffect, useState} from \"react\";\nimport {toast, ToastContainer} from \"react-toastify\"\nimport 'react-toastify/dist/ReactToastify.css'\nimport {useCookies} from \"react-cookie\";\n\ntype Offer = Components.Schemas.Offer\n\nexport default function HotelOffer({offer, onToggleOffer, bookButton, isCheapest}: {isCheapest?: boolean, bookButton?: boolean, offer: Offer, onToggleOffer: (id: string) => Promise<void> }) {\n\n    const router = useRouter()\n\n    const [isSaved, setIsSaved] = useState(offer.isSaved)\n\n    const [bgColor, setBgColor] = useState(\"#ededed\")\n\n    // @ts-ignore\n    const [cookies, setCookie] = useCookies('queryInput')\n\n    // @ts-ignore\n    const [hotelIdCookies, setHotelIdCookie] = useCookies(\"selected_hotelid\")\n\n    const bookToast = () => toast(\"Enjoy your trip ☀️\", {\n        autoClose: 1500,\n        hideProgressBar: false,\n        closeOnClick: true,\n        draggable: false,\n        progress: undefined\n    });\n\n\n    useEffect(() => {\n        if (isCheapest) {\n            setBgColor(\"#67B7D1\")\n        }\n    }, [])\n\n    async function handleToggle() {\n        setIsSaved(!isSaved)\n\n        await new Promise(r => setTimeout(r, 2000));\n\n        await onToggleOffer(offer._id)\n\n        setIsSaved(!isSaved)\n    }\n\n    function onClickOfferHandler() {\n        setHotelIdCookie(\"selected_hotelid\", offer.hotelid)\n        router.push(\"hotel_offers/\" + offer.hotelid)\n\n    }\n\n\n    return (\n        <Card>\n            <CardHeader sx={{backgroundColor: bgColor}} title={\n                <Grid container spacing={0}>\n                    <Grid item xs={11}>\n                        <Typography fontWeight=\"bold\">{offer.duration} Days - {offer.outboundDepartureAirport}, {offer.outboundArrivalAirport}</Typography>\n                        {isCheapest ? <Typography fontWeight=\"bold\">✨Cheapest✨</Typography> : <></>}\n                    </Grid>\n\n                <Grid item xs={1} justifyContent={\"end\"} >\n                    <Stack direction={\"row\"}>\n                        <Button onClick={handleToggle}>\n\n                            {!isSaved ? <>\n                            <BookmarkBorderOutlined fontSize={\"medium\"} color={\"warning\"}/>\n                                <Typography sx={{color: \"black\"}}>Save</Typography>\n                            </> : <>\n                            <BookmarkOutlined fontSize={\"medium\"} color={\"warning\"} />\n                                <Typography color={{color: \"black\"}}>Unsave</Typography>\n                            </>}\n                        </Button>\n                    </Stack>\n                </Grid>\n\n                </Grid>\n\n            }/>\n            <CardContent>\n                <Stack direction=\"row\" justifyContent=\"space-between\">\n                    <Stack gap={2}>\n                        <Flight \n                            inbound={true} \n                            departureDatetime={offer.outboundDepartureDatetime}\n                            departureAirport={offer.outboundDepartureAirport}\n                            arrivalDatetime={offer.outboundArrivalDatetime}\n                            arrivalAirport={offer.outboundArrivalAirport}\n                        />\n                        <Flight \n                            inbound={false} \n                            departureDatetime={offer.inboundDepartureDatetime}\n                            departureAirport={offer.inboundDepartureAirport}\n                            arrivalDatetime={offer.inboundArrivalDatetime}\n                            arrivalAirport={offer.inboundArrivalAirport}\n                        />\n                    </Stack>\n                    <Stack gap={2}>\n                        <Stack direction=\"row\" alignItems=\"center\">\n                            <RestaurantMenu/>\n                            <Typography ml={1} variant=\"body1\">{offer.mealType}</Typography>\n                        </Stack>\n                        <Stack direction=\"row\" alignItems=\"center\">\n                            <Bed/>\n                            <Typography ml={1} variant=\"body1\">{offer.roomType}</Typography>\n                        </Stack>\n                        {offer.oceanView &&\n                            <Stack direction=\"row\" alignItems=\"center\">\n                                <Water/>\n                                <Typography ml={1} variant=\"body1\">Oceanview</Typography>\n                            </Stack>\n                        }\n                    </Stack>\n                    <Stack justifyContent=\"end\" gap={2}>\n                        <Stack m={0} direction=\"row\" divider={<Divider orientation=\"vertical\" flexItem/>} spacing={1}>\n                            <Typography variant=\"body1\">{offer.duration} Days</Typography>\n                            <Typography variant=\"body1\">{offer.countAdults} Adults</Typography>\n                            <Typography variant=\"body1\">{offer.countChildren} Children</Typography>\n                        </Stack>\n                        <Typography variant=\"h5\" textAlign=\"right\">{offer.price} €</Typography>\n                        {bookButton ?\n                            <>\n                            <Button variant=\"contained\" color={\"success\"} onClick={bookToast}>BOOK</Button>\n                            <ToastContainer />\n                            </>\n                            :\n                        <Button variant=\"contained\" onClick={onClickOfferHandler}>VIEW HOTEL</Button>\n                        }\n                    </Stack>\n                </Stack>\n            </CardContent>\n        </Card>\n    )\n}","/Users/flohop/WebstormProjects/check24-holiday-challenge/frontend/app/components/Nav/Nav.tsx",[],[],"/Users/flohop/WebstormProjects/check24-holiday-challenge/frontend/app/components/SearchForm/SearchForm.tsx",[],[],"/Users/flohop/WebstormProjects/check24-holiday-challenge/frontend/app/hotel_offers/[id]/page.tsx",["105"],[],"\"use client\";\nimport {usePathname, useRouter} from \"next/navigation\"\nimport {useEffect, useState} from \"react\";\nimport {gql, useLazyQuery, useMutation, useQuery} from \"@apollo/client\";\nimport {Box, Grid, LinearProgress, Rating, Stack, Typography} from \"@mui/material\";\n// @ts-ignore\nimport InfiniteScroll from \"react-infinite-scroller\"\nimport HotelOffer from \"@/app/components/HotelOffer/HotelOffer\";\nimport {ADD_SAVED_OFFERS_MUTATION} from \"../../utils/mutations\"\nimport {calcDuration, generateRandomNumber} from \"../../utils/utils\"\nimport {useCookies} from \"react-cookie\";\n\nconst HOTEL_QUERY = gql`\n    query Hotel($hotelId: Float!) {\n        hotel(id: $hotelId) {\n            hotelname\n            hotelstars\n            hotelid\n        }\n    }\n`\n\n\nconst HOTEL_OFFERS_QUERY_2 = gql`\n    query Offers_by_hotel_by_filter($input: OfferInput!) {\n        offers_by_hotel_by_filter(input: $input) {\n            countadults\n            countchildren\n            hotelid\n            inboundarrivalairport\n            inboundarrivaldatetime\n            inbounddepartureairport\n            inbounddeparturedatetime\n            mealtype\n            oceanview\n            isSaved\n            outboundarrivaldatetime\n            outboundarrivalairport\n            outbounddepartureairport\n            outbounddeparturedatetime\n            price\n            _id\n            roomtype\n        }\n    }\n`\n\nexport default function Page() {\n\n    const pathname = usePathname()\n\n    const [pageNumber, setPageNumber] = useState(1)\n\n    const [canLoadMore, setCanLoadMore] = useState(true)\n\n    const [offers, setOffers] = useState<any[]>([])\n\n    const router = useRouter()\n\n    const [searchQuery, setSearchQuery] = useState({})\n\n    const [hotelId, setHotelId] = useState<number>()\n\n    const [cookies, setCookie] = useCookies([\"queryInput\", \"selected_hotelid\"])\n\n\n    const {data: hotelData, error: hotelError, loading: hotelLoading} = useQuery(HOTEL_QUERY, {\n        variables: {\n            \"hotelId\": hotelId,\n\n        }\n    })\n\n    const [getOffers, {data: offerData, error: offerError, loading: offerLoading, fetchMore}] = useLazyQuery(HOTEL_OFFERS_QUERY_2)\n\n\n    useEffect(() => {\n        if (cookies.queryInput === undefined || cookies.selected_hotelid === undefined) {\n            router.push(\"/\")\n        } else {\n            // Since we want to load it instantly, we have to read\n            // the cookies instead of waiting for the path variable\n\n            console.log(\"Cookies\", cookies.queryInput)\n            console.log(\"HotelId: \", cookies.selected_hotelid)\n\n             getOffers({\n                variables: {\n                    input: {\n                        hotelId: Number.parseInt(cookies.selected_hotelid),\n                        pageNumber: 1,\n                        pageSize: 10,\n                        earliestDepartureDate: cookies.queryInput.earliestDepartureDate,\n                        countAdults: cookies.queryInput.countAdults,\n                        departureAirports: cookies.queryInput.departureAirports,\n                        countChildren: cookies.queryInput.countChildren,\n                        price: cookies.queryInput.price,\n                        duration: cookies.queryInput.duration,\n                        latestReturnDate: cookies.queryInput.latestReturnDate,\n                        mealType: cookies.queryInput.mealType,\n                        oceanView: cookies.queryInput.oceanView,\n                        roomType: cookies.queryInput.roomType,\n\n                    }\n                }\n            }).then((response) => {\n                console.log(\"Got response: \", response)\n\n                if (response.data.offers_by_hotel_by_filter.length < 10) {\n                    setCanLoadMore(false)\n                }\n\n             }).catch((err) => {\n                 console.log(\"Error: \", err)\n             })\n        }\n    }, [])\n\n\n\n    const [toggleOfferMutation, {data: saveData, loading: saveLoading, error: saveError}] = useMutation(ADD_SAVED_OFFERS_MUTATION)\n\n    useEffect(() => {\n        if (!offerLoading  && offerData) {\n            setOffers(offerData.offers_by_hotel_by_filter)\n        }\n\n    }, [offerLoading, offerData])\n\n    async function loadMore(pageNumber: number) {\n\n        // Only load more if there are already some present\n        if (offers.length == 0 ) {\n            return []\n        }\n\n        const response = await fetchMore({\n            variables: {\n                pageNumber: pageNumber\n            }\n        })\n        const newOffers = response.data.offers_by_hotel_by_filter\n\n        if (newOffers.length == 0) {\n            setCanLoadMore(false)\n        }\n\n        setOffers(prevState => [...prevState, ...newOffers])\n    }\n\n    useEffect(() => {\n        const split = pathname.split(\"/\")\n        setHotelId(Number.parseInt(split[split.length-1]))\n    }, [pathname])\n\n    if (hotelError || hotelLoading) {\n        return <LinearProgress />\n    }\n\n    async function handleToggleOffer(offerId: string): Promise<void> {\n        // Add offer mutation\n        await toggleOfferMutation({variables: {offerId: offerId}})\n\n    }\n\n    // @ts-ignore\n    return <>\n        <Grid container direction=\"row\" justifySelf=\"center\" justifyContent=\"center\" alignItems=\"center\">\n            <Grid item xs={4}>\n                <Typography variant=\"h4\">{hotelData.hotel.hotelname}</Typography>\n            </Grid>\n            <Grid item xs={1}>\n                <Rating value={hotelData.hotel.hotelstars} readOnly />\n            </Grid>\n        </Grid>\n        <Box\n            display=\"block\"\n            marginLeft=\"auto\"\n            marginRight=\"auto\"\n            sx={{backgroundImage: `url(\"/hotels/${(hotelData.hotel.hotelid % 40) + 1}.jpg\")`, width: \"711px\",height: \"400px\", backgroundSize: \"cover\"}}/>\n\n        {/* offers */}\n\n        <InfiniteScroll\n            pageStart={1}\n            loadMore={loadMore}\n            hasMore={canLoadMore}\n            threshold={1000}\n            loader={<LinearProgress key={generateRandomNumber()} />}\n            key={generateRandomNumber()}\n        >\n\n            <Stack gap={3}>\n                {offerData !== undefined && offers.map((offer: any) =>\n                    <HotelOffer key={generateRandomNumber()} onToggleOffer={handleToggleOffer} bookButton={true} offer={{\n                        _id: offer._id,\n                        isSaved: offer.isSaved,\n                        hotelid: offer.hotelid,\n                        price: offer.price,\n                        countAdults: offer.countadults,\n                        countChildren: offer.countchildren,\n                        inboundDepartureAirport: offer.inbounddepartureairport,\n                        inboundDepartureDatetime: offer.inbounddeparturedatetime, // date\n                        inboundArrivalAirport:  offer.inboundarrivalairport,\n                        inboundArrivalDatetime: offer.inboundarrivaldatetime, // datetime\n                        outboundDepartureAirport: offer.outboundarrivalairport,\n                        outboundDepartureDatetime: offer.outbounddeparturedatetime, // date\n                        outboundArrivalAirport: offer.outboundarrivalairport,\n                        outboundArrivalDatetime: offer.outboundarrivaldatetime, // datetime\n                        mealType: offer.mealtype,\n                        oceanView: offer.oceanview == 'true' ,\n                        roomType: offer.roomtype,\n                        duration: calcDuration(offer.outbounddeparturedatetime, offer.inboundarrivaldatetime)\n                    }} />\n                )}\n            </Stack>\n        </InfiniteScroll>\n    </>\n}\n","/Users/flohop/WebstormProjects/check24-holiday-challenge/frontend/app/hotels/[id]/page.tsx",[],[],"/Users/flohop/WebstormProjects/check24-holiday-challenge/frontend/app/hotels/page.tsx",[],[],"/Users/flohop/WebstormProjects/check24-holiday-challenge/frontend/app/layout.tsx",[],[],"/Users/flohop/WebstormProjects/check24-holiday-challenge/frontend/app/offers/page.tsx",[],[],"/Users/flohop/WebstormProjects/check24-holiday-challenge/frontend/app/page.tsx",[],[],"/Users/flohop/WebstormProjects/check24-holiday-challenge/frontend/app/saved_offers/page.tsx",[],[],"/Users/flohop/WebstormProjects/check24-holiday-challenge/frontend/app/types/converter.ts",[],[],"/Users/flohop/WebstormProjects/check24-holiday-challenge/frontend/app/types/openapi.d.ts",[],[],"/Users/flohop/WebstormProjects/check24-holiday-challenge/frontend/app/utils/gqlClient.ts",[],[],"/Users/flohop/WebstormProjects/check24-holiday-challenge/frontend/app/utils/utils.ts",[],[],"/Users/flohop/WebstormProjects/check24-holiday-challenge/frontend/app/utils/mutations.ts",[],[],{"ruleId":"106","severity":1,"message":"107","line":41,"column":8,"nodeType":"108","endLine":41,"endColumn":10,"suggestions":"109"},{"ruleId":"106","severity":1,"message":"110","line":117,"column":8,"nodeType":"108","endLine":117,"endColumn":10,"suggestions":"111"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isCheapest'. Either include it or remove the dependency array.","ArrayExpression",["112"],"React Hook useEffect has missing dependencies: 'cookies.queryInput', 'cookies.selected_hotelid', 'getOffers', and 'router'. Either include them or remove the dependency array.",["113"],{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},"Update the dependencies array to be: [isCheapest]",{"range":"118","text":"119"},"Update the dependencies array to be: [cookies.queryInput, cookies.selected_hotelid, getOffers, router]",{"range":"120","text":"121"},[1422,1424],"[isCheapest]",[3882,3884],"[cookies.queryInput, cookies.selected_hotelid, getOffers, router]"]